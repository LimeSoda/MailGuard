<?php
/**
 * MailGuard extension for Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade
 * the Hackathon MailGuard module to newer versions in the future.
 * If you wish to customize the Hackathon MailGuard module for your needs
 * please refer to http://www.magentocommerce.com for more information.
 *
 * @category   Hackathon
 * @package    Hackathon_MailGuard
 * @copyright  Copyright (C) 2014 Andre Flitsch (http://www.pixelperfect.at)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

/**
 *
 * @category   Hackathon
 * @package    Hackathon_MailGuard
 * @author     Andre Flitsch <andre@pixelperfect.at>
 */
class Hackathon_MailGuard_Model_Core_Email_Template extends Mage_Core_Model_Email_Template
{
    /**
     * wraps send() method of parent, supplies before and after events, and
     * sends if allowed
     *
     * @param   array|string       $email        E-mail(s)
     * @param   array|string|null  $name         receiver name(s)
     * @param   array              $variables    template variables
     * @see     Mage_Core_Model_Email_Template
     * @return  boolean
     **/
    public function send($email, $name = null, array $variables = array())
    {
        if (!Mage::getStoreConfigFlag('hackathon_mailguard/settings/active')) {
            return parent::send($email, $name, $variables);
        } else {
            $return = FALSE;
            Mage::dispatchEvent('email_template_send_before', array('email' => $this, 'email_to' => $email));
            $validatedEmails = $this->getValidatedEmails();
            if(!$this->getDoNotSend() && !empty($validatedEmails)){
                $return = parent::send($validatedEmails, $name, $variables); // TODO: Change the autogenerated stub
            }
            Mage::dispatchEvent('email_template_send_after', array('email' => $this, 'email_to' => $email));
            return $return;
        }
    }
}